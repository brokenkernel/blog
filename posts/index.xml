<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on pop %eax</title>
    <link>https://blog.brokenkernel.com/posts/</link>
    <description>Recent content in Posts on pop %eax</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 28 Jul 2023 23:24:25 -0700</lastBuildDate><atom:link href="https://blog.brokenkernel.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Book Review - The Annotated Turing</title>
      <link>https://blog.brokenkernel.com/posts/book-review-annotated-turing/</link>
      <pubDate>Fri, 28 Jul 2023 23:24:25 -0700</pubDate>
      
      <guid>https://blog.brokenkernel.com/posts/book-review-annotated-turing/</guid>
      <description>&amp;ldquo;The Annotated Turing&amp;rdquo; by Charles Petzold 1
Many of us have learned about &amp;lsquo;Turing Machines&amp;rsquo; or &amp;lsquo;Turing Completeness&amp;rsquo; but have never actually read the motivating text and explanation. This is a phenomenal book that goes through paragraph by paragraph the paper &amp;ldquo;On Computable Numbers&amp;rdquo; 2 by Alan Turing in a rigorous way explaining the concept intuitively and completely. Not only does it explain the text but it also gives enough background so that one could understand and follow through the proofs themselves.</description>
    </item>
    
    <item>
      <title>Leprechauns of Software Engineering</title>
      <link>https://blog.brokenkernel.com/posts/leprechauns-of-software-engineering/</link>
      <pubDate>Sun, 02 Apr 2023 14:50:25 -0700</pubDate>
      
      <guid>https://blog.brokenkernel.com/posts/leprechauns-of-software-engineering/</guid>
      <description>I recently read &amp;ldquo;The leprechauns of software engineering&amp;rdquo; by Laurent Bossavit 1. The book goes through a few myths about software engineering and then traces how those myths entered the public consciousness. It was well worth reading for anyone interested in research based software engineering practices. It was primarily useful on how to verify about claims rather than the claims themselves. While I&amp;rsquo;ve heard of most of the myths - I also heard about them as myths rather than as true claims.</description>
    </item>
    
    <item>
      <title>Communication Treadmill</title>
      <link>https://blog.brokenkernel.com/posts/communication-treadmill/</link>
      <pubDate>Wed, 29 Mar 2023 21:58:58 -0700</pubDate>
      
      <guid>https://blog.brokenkernel.com/posts/communication-treadmill/</guid>
      <description>People pay attention to high value communication channels. These give them information about the job, hobby, etc. Since people pay attention to these channels they get used more. Eventually they get used for something more borderline or inappropriate for the communication channel. When this happens people stop paying attention to the formerly high value channel and shift to new locations. Eventually the original channel is useless. Rinse and repeat for the new communication channel.</description>
    </item>
    
    <item>
      <title>Three analytical traps in accident investigation</title>
      <link>https://blog.brokenkernel.com/posts/three-analytical-traps/</link>
      <pubDate>Tue, 14 Mar 2023 11:24:44 -0700</pubDate>
      
      <guid>https://blog.brokenkernel.com/posts/three-analytical-traps/</guid>
      <description>I recently watched a video on mistakes investigators make in accident investigating. It was worth watching but because its video it is difficult to skim or remember. This blog post is to make it to write down what I learned in a textual format to make it easier to find and remember later
This is the video:
The three mistakes were
Counterfactual reasoning 1 This is when the investigator discusses events that never occurred.</description>
    </item>
    
    <item>
      <title>Thoughts on How Code Degrades</title>
      <link>https://blog.brokenkernel.com/posts/thoughts-on-how-code-degrades/</link>
      <pubDate>Fri, 13 Aug 2021 17:48:55 -0700</pubDate>
      
      <guid>https://blog.brokenkernel.com/posts/thoughts-on-how-code-degrades/</guid>
      <description>When a piece of code is first written it easy to maintain quality. However, several things contribute to loss of quality.
New and unexpected requirements may happen. This may violate the initial layering rules. New people may join. Newer people know less and then make more local changes. This results in global invariants becoming local invariants.
Chesterton&amp;rsquo;s fence is a curse here and one of the reasons that documentation is so important.</description>
    </item>
    
    <item>
      <title>Excellent Bugs</title>
      <link>https://blog.brokenkernel.com/posts/excellent-bugs/</link>
      <pubDate>Wed, 09 Sep 2020 21:22:29 -0700</pubDate>
      
      <guid>https://blog.brokenkernel.com/posts/excellent-bugs/</guid>
      <description>Some bugs are interesting. Others are annoying. Some are fun. Some are just impossible. Many bugs are confusing. Others are are annoying. Some are just impossible. This is a list of those bugs:
MRI disabled every iOS device in facility We can&amp;rsquo;t send mail more than 500 miles OpenOffice.org can&amp;rsquo;t print on Tuesday (see comment 28) I can&amp;rsquo;t log in when I stand up (and another similar story) A story about &amp;ldquo;magic&amp;rdquo; Print this file, your printer will jam gcj crashes in April and December, but only if you speak German in Austria Processor 5 doesn&amp;rsquo;t work if you&amp;rsquo;re standing too close A car that is allergic to vanilla ice cream (likely fake Some employees change the monitor&amp;rsquo;s resolution without touching it.</description>
    </item>
    
    <item>
      <title>Slack to Wiki</title>
      <link>https://blog.brokenkernel.com/posts/slack-to-wiki/</link>
      <pubDate>Sat, 29 Aug 2020 13:20:15 -0700</pubDate>
      
      <guid>https://blog.brokenkernel.com/posts/slack-to-wiki/</guid>
      <description>One habbit I&amp;rsquo;ve started at work is called &amp;ldquo;slack to wiki&amp;rdquo;. Whenever I learn something new, or explain something to someone else, I try to document it on our internal wiki quickly and in a low effort way. If I come back to the topic again in the future I&amp;rsquo;ll modify the content and make it actully good.
This forms of a knowledge base which can grow, and also lets me reference past topics in future conversations more easily.</description>
    </item>
    
    <item>
      <title>Modulo and Remainder</title>
      <link>https://blog.brokenkernel.com/posts/modulo-and-remainder/</link>
      <pubDate>Thu, 20 Aug 2020 17:56:28 -0700</pubDate>
      
      <guid>https://blog.brokenkernel.com/posts/modulo-and-remainder/</guid>
      <description>This is a quick test blog post to see if I could make mathjax and such work for me. It is not supposed to be complete right now.
Some Definitions even a number is even there is no remainder when divided by 2 equivalently $\{ 2k: k \in \mathbb{Z} \}$
odd a number is odd if it is not even equivalently $\{ 2k+1: k \in \mathbb{Z} \}$
This leads to the obvious question of what is a remainder?</description>
    </item>
    
    <item>
      <title>First Test</title>
      <link>https://blog.brokenkernel.com/posts/first-test/</link>
      <pubDate>Thu, 20 Aug 2020 17:46:00 -0700</pubDate>
      
      <guid>https://blog.brokenkernel.com/posts/first-test/</guid>
      <description>test test test 1
$x$ + $$ x + y $$
testing of a footnote&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description>
    </item>
    
  </channel>
</rss>
